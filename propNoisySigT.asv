function [xOut] = propNoisySigT(X,s,W,noise,T)
% Computes the propagation of a network over T timesteps

M = size(X,1);
N= size(X,2);

xOut = zeros(M,N,T);

prop1=@propNoisySig1T;


xOut(:,:,1)=X;

for t =2:T
    xOut(:,:,t)=prop1(x(:,:,t-1),s,W,noise(:,:,t));
end




Y = zeros(size(X));
N= size(X,2);

if (size(W,1)~=size(W,2))
    disp('dimension Mismatch'); 
end
if (size(W,1)~=length(s))
    disp('dimension Mismatch');
end





%Compute the values of the network after propagating one time step
for lay=N:-1:2
    Y(:,lay)= g(W(:,:,lay-1)*X(:,lay-1)+noise1(:,lay));
end
Y(:,1) = s+noise1(:,1);

end

